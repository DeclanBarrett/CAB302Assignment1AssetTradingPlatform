package Controllers.FrontEnd.Login;

import Controllers.BackEnd.AccountType;
import Controllers.Exceptions.LoginException;
import Controllers.Utils.UtilSceneChanger;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.paint.Color;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

/**
 * Handles events on the login page.
 */
public class LoginHandler implements Initializable {

    @FXML
    TextField LoginUsername;

    @FXML
    PasswordField LoginPassword;

    @FXML
    Label LoginErrorText;

    /**
     * Handles login button press
     * @param HandleLoginPress event generated by Login Press button
     * @throws IOException handles error in file entry/output
     */
    public void HandleLoginPress (ActionEvent HandleLoginPress) throws IOException {

        try {
            LoginController loginController = new LoginController();
            loginController.AttemptLogin(LoginUsername.getText(), LoginPassword.getText());

            if (LoginController.GetUser().getAccountType() == AccountType.SystemAdmin) {
                UtilSceneChanger.getInstance().ChangeToScene(UtilSceneChanger.SceneType.ADMIN);
            } else if (LoginController.GetUser().getAccountType() == AccountType.User ||
                    LoginController.GetUser().getAccountType() == AccountType.UnitLeader) {
                UtilSceneChanger.getInstance().ChangeToScene(UtilSceneChanger.SceneType.USER);
            } else {
                throw new LoginException("UNEXPECTED ERROR");
            }

        } catch(LoginException e) {
            LoginErrorText.setTextFill(Color.RED);
            LoginErrorText.setText(e.getMessage());
        } catch (Exception e) {
            LoginErrorText.setTextFill(Color.ORANGE);
            LoginErrorText.setText(e.getMessage());
        }

    }

    /**
     * Handles reset password events
     * @param TriggerResetPassword events generated by Reset Password press button
     * @throws IOException handles error in file entry/output
     */
    public void TriggerResetPassword (ActionEvent TriggerResetPassword) throws IOException {
        UtilSceneChanger.getInstance().ChangeToScene(UtilSceneChanger.SceneType.RESET);
    }



    @Override
    public void initialize(URL url, ResourceBundle resourceBundle) {

    }
}

